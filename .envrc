
### This is used to run the action locally. 

# stores the original DOCKER_HOST value when entering the directory
if [[ -n "${DOCKER_HOST}" ]]; then
    export _OLD_DOCKER_HOST="${DOCKER_HOST}"
fi

# sets DOCKER_HOST to the standard Docker socket
export DOCKER_HOST="unix:///var/run/docker.sock"

# create project-local bin directory and add to PATH
mkdir -p "${PWD}/.direnv/aliases"
PATH_add "${PWD}/.direnv/aliases"

# wrap a command for easy building
cat > "${PWD}/.direnv/aliases/compileqmd" << 'EOF'
#!/usr/bin/env sh
exec act --container-architecture linux/amd64 \
    --workflows ".github/workflows/quarto-nixbld.yml" \
    --artifact-server-path="./tmp/artifacts" \
    --secret-file "" \
    --bind
    --var-file "" \
    --input-file "" \
    --eventpath "" \
    --reuse \
    --rm \
    "$@"
EOF

# make the wrapper executable
chmod +x "${PWD}/.direnv/aliases/compileqmd"

# creates a deactivate hook to restore the original DOCKER_HOST in shell if you need to leave the dir
before_leave() {
    if [[ -n "${_OLD_DOCKER_HOST}" ]]; then
        export DOCKER_HOST="${_OLD_DOCKER_HOST}"
        unset _OLD_DOCKER_HOST
    else
        unset DOCKER_HOST
    fi
}